
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sauthprofiles
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: sauth
  name: sauth
spec:
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  selector:
    app: sauth

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sauth
  name: sauth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sauth
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sauth
    spec:
      containers:
      - image: sauthnio:latest
        imagePullPolicy: Always
        name: sauth
        envFrom:
        - configMapRef:
          name: sauth-config
        ports:
        - containerPort: 8000
          protocol: TCP
        resources: {}
        volumeMounts:
        - name: profilepics
          mountPath: /root/webroot/profile-pics
      imagePullSecrets:
        - name: tfregcred
      volumes:
      - name: profilepics
        persistentVolumeClaim:
          claimName: sauthprofiles

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  name: sauth-ingress

---
